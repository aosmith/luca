0.7.3:
  - Models being loaded by the FormView will now call
    beforeFormLoad methods if they exist on those models

0.8.1
  - Adds many style fixes for GridView
  - Fixes style conflicts for Bootstrap grid-* css selectors
  - Adds getForm() and getModel() methods to Luca.Field classes that belong to a form

0.8.2
  - Adds checkbox group field component ( thanks nick desteffen )

0.8.3
  - Stop mixing in underscore.string onto the global underscore object
  - the ctype property used to create objects from hashes, can now be named 'type'
  - Adds Luca.util.classify function for converting strings into class names

0.8.4
  - Fixes bug in development console
  - Colorizes Development Console
  - Introduces Luca.template helper to find template by regex in Luca.templates
    or window.JST.  Optionally compiling the template if you pass variables to it.
  - Introduces Luca.View.applyStyles which delegates to @$el.css

0.8.5
  - Luca.define() can be used to extend components, and retain references
    to the inheritance chain.  Components defined this way will have
    _className attributes as well as _superClass() references.  This
    allows for introspection of components as well as advanced
    querying of the Luca Component Cache

  _ Added _.def as an alias to Luca.define

  - All Luca components have been migrated over to the new Luca.define() API

0.8.6
  - Luca.ModalView has been refactored to use Twitter Bootstrap Modal
  - Luca.Application now has keyEvents API for handling keypress
    events and delegating them properly
  - Luca.containers.CardView has been refactored to be more inline with base container
  - Luca.View gets $append, $html, $container jQuery helpers.  shortcut for @renderToEl().append, etc
  - Luca.View gets @bodyTagName, @bodyTemplate properties.
      - @bodyTemplate references a JST template which automatically gets added
      via $html if present, immediately when the view is rendered
      - @bodyTagName is where $append, $html will insert content, otherwise defaults to @$el
  - Luca.View has $bodyEl() method which points to $(@bodyTagName) or $(@el) ( default )

0.8.7
  - Luca.core.Container now uses bodyTemplate to render
  - Luca.Collection.cached property is now deprecated.  use @cache_key instead
  - introducing Luca.Collection.cachedMethods property.  any method on the
    collection which is listed here, will have its return value memoized upon
    first being called.  Whenever the collection is reset or changed, this
    value will be cleared, and then the next call will be cached, and so on

0.8.8
  - Added development mode helpers to Luca.View to aid in browser editing
  - Added configuration for @deferrable rendering system for Luca.View
  - Added isComponent and supportsBackboneEvents helpers
  - Added componentEvents configuration sugar to Luca.core.Container classes
    @componentEvents allows for a container to bind to events on its children
  - major work on component tester
  - the development console component now extends from Luca.core.Panel instead of the ModalView
  - Added _super() method which accepts a method name, context, and arguments array
    and is the equivalent to applying the component you extend from prototype method
    with @, arguments
  - Added component.once, as an alias for binding to an event and firing a callback one time
  - Added component.defer(operation).until(object,trigger) as wrapper around .once binding.
    operation can be a string, or a function, and the call to until accepts an object and
    the name of a trigger to listen for on that object.  if you just pass a trigger, object is implicitly the component
  - Luca() is now a global helper for finding views, querying the cache, lazily creating objects, etc.  smart enough
    to know what you want from it based on the input
  - window.Luca now mixes in Backbone.Events and Luca.Events.  triggers events whenever components are registered or created

0.8.9
  - Refactored Panel View to incorporate Load Mask and Top and Bottom Toolbar
  - Refactored GridView and FormView to inherit from Luca.components.Panel
  - Added @additionalClassNames property to Luca.View.
  - GridView and FormView can not have an automatic load mask effect based on Twitter's progress bar.
    Simply trigger enable:loadmask and disable:loadmask on any view where loadMask is set to true

0.9.0
  - Introducing Luca.components.CollectionView

0.9.1
  - Bugfix Release

0.9.2 
  - FormView has errorMessage, successMessage methods which use twitter bootstrap alerts as flash message
  - FormView toolbar accepts new options: true, both, bottom, or top
  - Luca.Collection has a property @remoteFiltering which makes applyFilter always use remote fetch
  - Bugfix in GridView collection change handler
  - Added Luca.isViewPrototype, Luca.isModelPrototype, Luca.isCollectionPrototype helpers
  - Added configuration option to control auto registration of components with the registry
  - Added Luca.parentClass and Luca.inheritanceChain methods for inspecting a component or prototype  
  - Changed single instance tracking mechanism on CollectionManager.  Will throw an error if more than one
    is created without specifying a name.
  - Added Luca.getCollectionManager() helper as an Alias for Luca.CollectionManager.get()
  - Luca.getApplication() and Luca.getCollectionManager() accept a name argument
  - Classes like Luca.Application and Luca.CollectionManager which normally are singletons
    can have more than one instance if a unique name is given 

0.9.3
  - CardViews and Controllers set data attributes on their elements for the active card / page
  - Added convenience methods to container 'pluck', 'invoke'
  - Added methods to Controller for ease of autogenerating routes
  - Added beforeInitialize hook on Luca.View 
  - Luca.View can now automatically configure state machine models by passing `stateful:true`
    in your view definition.
  - Containers will respond to getter attributes set on their components, by defining a getter
    on the container
